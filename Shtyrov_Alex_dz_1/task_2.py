# """
# Задание 2.
#
# Реализуйте два алгоритма.
#
# Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
# В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
# Сложность такого алгоритма: O(n^2) - квадратичная.


my_list = [-18, -12, 4, 5, -3, 20, -14, 8, -1, -11, -17]


# print(min(my_list))


def find_min_n2(some_list):
    res = 0
    for num in some_list:
        for i in range(len(some_list)):
            if num < some_list[i] and num < res:
                res = num
    return res


print(find_min_n2(my_list))


# Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
# Сложность такого алгоритма: O(n) - линейная.


def find_min(some_list):
    res = 0
    for num in some_list:
        if num < res:
            res = num
    return res


print(find_min(my_list))

# Примечание:
# Построить список можно через генератор списка.
# Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
# а не писать "мы это не проходили)".
# Алгоритмизатор должен развивать мышление, а это прежде всего практика.
# А без столкновения со сложностями его не развить.
# """
